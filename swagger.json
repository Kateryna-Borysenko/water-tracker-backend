{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "Water Tracker API docs",
    "description": "API documentation for the Water Tracker project. [Backend GitHub repository](https://github.com/TokarevArtemV/water-tracker-node-rest-api)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    { "url": "http://localhost:5000" },
    { "url": "https://water-tracker-node-rest-api.onrender.com" } 
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Endpoints for user authorization"
    },
    {
      "name": "User",
      "description": "Endpoints for user management"
    },
    {
      "name": "Water",
      "description": "Endpoints for water consumption tracking"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Registration",
        "requestBody": {
          "description": "Object containing user registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/authSchema"
              },
              "example": {
                "email": "example@example.com",
                "password": "password123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful user registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registerResponse"
                },
                "example": {
                  "email": "example@example.com",
                  "password": "password123"
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid request body",
            "content": {}
          },
          "409": {
            "description": "Email already in use",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Authentication",
        "requestBody": {
          "description": "Object containing user authentication details",
          "required": ["email", "password"],
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/authSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful user authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password",
            "content": {}
          },
          "404": {
            "description": "Email not verified",
            "content": {}
          } 
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Logout",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User successfully logged out",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {}
          }
        }
      }
    },
    "/api/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify User Email",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "description": "Verification token associated with the user's email",
            "schema": {
              "type": "string"
            } 
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to sign-in page",
            "headers": {
              "Location": {
                "description": "URL to redirect to",
                "schema": {
                  "type": "string",
                  "example": "https://water-tracker-pi.vercel.app/signin"
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend Verification Email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email"
                  }
                },
                "required": [
                  "email"
                ]
              },
              "example": {
                "email": "example@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "example": {
                  "message": "Verification email sent"
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "authSchema": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/",
            "example": "example@example.com",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "pattern": "^[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?\\w\\d]{8,64}$",
            "example": "password123",
            "minLength": 8,
            "maxLength": 64,
            "description": "User's password"
          }
        }
      },
      "registerResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email"
          },
          "verify": {
            "type": "boolean",
            "description": "Verification status"
          }
        }
      },
      "authResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWZkMmI4ZTE1MzNiOGM3YjgyMjlmOSIsImlhdCI6MTcxMzQ3NDAxOSwiZXhwIjoxNzEzNTU2ODE5fQ.GWlOBrBcLf8iMM9RdBYwuHYL5bK4e_YPWCXD7aJbanY"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "description": "User Email"
              },
              "username": {
                "type": "string",
                "description": "User Name",
                "example": "Alex"
              },
              "gender": {
                "type": "string",
                "description": "Gender",
                "enum": [
                  "woman",
                  "man"
                ],
                "example": "men"
              },
              "waterRate": {
                "type": "integer",
                "description": "Water rate",
                "example": 2000
              },
              "avatarURL": {
                "type": "string",
                "description": "User's Avatar",
                "example": "https://s.gravatar.com/avatar/fe032d032b9d3530e6c9ccf9ad519004?r=pg"
              }
            }
          }
        }
      }
    },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }

